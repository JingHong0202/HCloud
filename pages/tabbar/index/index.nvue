<template>
	<list :render-whole='true' class="index" ref='index' id="index" disabled :bounce="false" show-scrollbar="false">
		<refresh :display="downDisplay" @refresh="refresh" class="c-refresh">
			<uni-load-more :status="downStatus" :contentText='downText' />
		</refresh>
		<cell ref='top' class="pic-box">
			<view class="pic">
				<image class="pic-img" src="/static/images/pic.png" mode="aspectFill" ref='pic' />
				<view class="index-nav">
					<uni-status-bar />
					<uni-nav-bar :border='false' @clickLeft='toAccount' backgroundColor="rgba(0,0,0,0)">
						<view slot="left">
							<image elevation="4px" :src="info.avatars || '/static/images/avatar.png'" mode="aspectFit"
								class="user-avatars" />
						</view>
					</uni-nav-bar>
				</view>
			</view>
			<view class="index-ctx">
				<view class="index-ctx-box">
					<view class="index-ctx-top hover" elevation="5px" @click="toPage(1)">
						<image class='index-ctx-img' src="/static/icon/page/index/chuanshu.png" mode="widthFix" />
						<text class="index-ctx-title">传输列表</text>
						<view class="redDot" v-if="RUNTIME">
							<uni-badge :text="RUNTIME" type="error"></uni-badge>
						</view>
					</view>
					<view class="index-ctx-bottom ">
						<view class="index-ctx-bottom-left hover" elevation="5px" @click="toPage(2)">
							<image class='index-ctx-img' src="/static/icon/page/index/shangchuan.png" mode="widthFix" />
							<text class="index-ctx-title">上传文件</text>
						</view>
						<view class="index-ctx-bottom-right hover" elevation="5px" @click="toPage(3)">
							<image class='index-ctx-img' src="/static/icon/page/index/search-a.png" mode="widthFix" />
							<text class="index-ctx-title">搜索文件</text>
						</view>
					</view>
				</view>
			</view>
		</cell>
		<cell :style="{height: `${wHeight}`}" ref='dynamic'>
			<view class="dynamic">
				<view class="dynamic-title" @click="toggleHandle">
					<text class="dynamic-title-left">最近动态</text>
					<text class="dynamic-title-right iconfont">{{listSwitch ? '&#xe79f;' : '&#xe64b;'}}</text>
				</view>
				<view class="index-list" style="width: 750rpx;">
					<custom-list ref='list' :actionSheetLabels="collection_lables" closeLongPress customEvent
						@longpress='handlerLongPress' :placeholder="placeholder" :skeletonLoading="skeletonLoading"
						:isShowFabTop='listSwitch' :isSort="false" :isShow="listSwitch" isPageScroll :list="list"
						@clean='cleanList' @all='selectAll' :status="status" :loadText='loadText'></custom-list>
				</view>
			</view>
		</cell>
	</list>
</template>

<script>
	const dom = uni.requireNativePlugin('dom'),
		bindingx = uni.requireNativePlugin('bindingx');

	import customList from '@/common/js/mixins/custom-list.js'
	import nav from '@/common/js/mixins/nav.js'
	import refresh from '@/common/js/mixins/refresh.js'
	import nested from '@/common/js/mixins/nested-list.js'
	import {
		getEl
	} from '@/util/bindingx.js'
	import {
		getMedia,
	} from '@/util/file.js'
	import {
		mapGetters,
		mapState,
		mapActions
	} from 'vuex'
	import {
		getdynamic
	} from '@/api/file.js'
	export default {
		mixins: [customList, nav, refresh, nested],
		data() {
			let listSwitch = uni.getStorageSync('index-switch');
			return {
				listSwitch: listSwitch === '' ? true : listSwitch,
				loadText: {
					contentdown: '只能显示30天内上传的文件',
				},
				wHeight: 0,
				placeholder: {
					text: '',
					mode: 'hide'
				},
				collection_lables: [{
						text: '下载',
						method: 'download',
						icon: '/static/icon/actionsheet/download.png'
					},
					{
						text: '打开所在目录',
						method: 'openDir',
						icon: '/static/icon/actionsheet/to-dir.png',
						once: true
					}
				],
			};
		},
		computed: {
			...mapGetters('file', ['RUNTIME']),
			...mapState('file', ['action']),
			info() {
				return getApp().globalData.userinfo
			}
		},
		async onReady() {
			// request
			await this.init()
			this.$nextTick(function() {
				dom.getComponentRect(this.$refs['dynamic'], ({
					size
				}) => {
					this.dynamicTop = size.top
					bindingx.bind({
						eventType: 'scroll',
						anchor: getEl(this.$refs['index']),
						props: [{
							element: getEl(this.$refs['top']),
							property: 'opacity',
							expression: '1-y/' + this.dynamicTop
						}]
					});
					uni.$emit('setScrollRef', {
						id: 'index'
					})
					this.skeletonLoading = false
				})
			})
		},
		methods: {
			...mapActions('file', ['ADD_UP_LIST']),
			async refresh() {
				this.downStatus = 'loading'
				// reset
				if (this.action) this.$refs['list'].exitAction()
				await this.init(0)
				this.setDownStatus('more')
			},
			async handlerLongPress(item) {
				if (item.type !== 20) return this.$refs['list'].addSelectList(item)
			},
			async init(isCache = 1) {
				const {
					data: {
						filelist
					},
				} = (await getdynamic(isCache)).data
				this.list = filelist
			},
			toggleHandle() {
				uni.setStorage({
					key: 'index-switch',
					data: !this.listSwitch,
					success: () => {
						this.listSwitch = !this.listSwitch;
						this.cleanList()
					}
				})
			},
			toPage(index) {
				switch (index) {
					case 1:
						uni.navigateTo({
							url: '/pages/status/status'
						})
						break;
					case 2:
						uni.showActionSheet({
							itemList: ['从相册选择图片或视频', '从手机SD卡选择'],
							success: ({
								tapIndex
							}) => {
								switch (tapIndex) {
									case 0:
										let that = this
										getMedia().then(res => {
											uni.navigateTo({
												url: '/pages/folder-list/folder-list',
												success: () => {
													uni.$once('returnData', async (
														folderPath) => {
														await this
															.ADD_UP_LIST({
																target: folderPath
																	.uuid,
																selectlist: res
															})
														uni.navigateTo({
															url: '/pages/status/status'
														})
													})
												}
											})
										})
										break;
									case 1:
										uni.navigateTo({
											url: '/pages/upload/upload'
										})
										break;
								}
							}
						})
						break;
					case 3:
						uni.navigateTo({
							url: '/pages/search/search',
							animationType: 'slide-in-right'
						})
						break;
				}
			}
		}
	}
</script>

<style lang="scss" scoped>
	.index {
		flex-direction: column;
		@extend %flex;

		.hover:active {
			background-color: $uni-bg-color-hover;
		}


		.pic {
			width: 750rpx;
			height: 560rpx;
		}

		.index-refresh {
			height: 50px;
			width: 750rpx;
			@extend %f-ct;
		}

		.index-nav {
			flex-direction: column;
		}

		.pic-img {
			@include position(absolute, 0, 0, 0, 0);
		}

		.pic-box {
			height: 780rpx;
			flex-direction: column;
			position: relative;
		}

		.index-ctx {
			@extend %f-ct;
			@include position(absolute, 440rpx, 0, false, 0);

			.index-ctx-title {
				font-size: $uni-font-size-sm;
				color: #333;
			}

			.index-ctx-img {
				width: 30px;
				height: 40px;
				margin-bottom: 3px;
			}

			.index-ctx-box {
				flex-direction: column;
				padding-bottom: 10px;

				.index-ctx-top {
					background-color: white;
					width: 450rpx;
					height: 160rpx;
					margin-bottom: 20rpx;
					border-radius: 10px;
					@extend %f-ct;
					flex-direction: column;
					position: relative;

					.redDot {
						@include position(absolute, 10rpx, 10rpx, false, false)
					}
				}

				.index-ctx-bottom {
					width: 450rpx;
					height: 160rpx;
					flex-direction: row;
					justify-content: space-between;
					padding-bottom: 10px;

					.index-ctx-bottom-left {
						margin-right: 10px;
						@extend %flex;
						background-color: white;
						border-radius: 10px;
						@extend %f-ct;
						flex-direction: column;
					}

					.index-ctx-bottom-right {
						@extend %flex;
						background-color: white;
						border-radius: 10px;
						@extend %f-ct;
						flex-direction: column;
					}
				}
			}
		}

		.dynamic {
			flex-direction: column;

			.index-list {
				flex-direction: column;
				@extend %flex;
			}

			.dynamic-title {
				padding: 25px 10px 5px;
				justify-content: space-between;
				align-items: center;
				background-color: white;

				.dynamic-title-left {
					font-size: 20px;
				}

				.dynamic-title-right {
					color: #000;
				}
			}
		}
	}
</style>
